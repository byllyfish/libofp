# Copyright (c) 2014, William W. Fisher.

$schema: 'http://json-schema.org/draft-04/schema#' 
id: action
description: >
  An Action is an object that represents an OpenFlow Action. All action objects 
  have an attribute named `action` which specifies the action type. Depending on
  the action type, the object may have 0 or more additional attributes.

    { 'action': 'OFPAT_OUTPUT', ... }

  The action type determines which attributes appear in the object. For example,
  the OFPAT_OUTPUT action requires attributes for `port` and `maxlen`.

  If the action type is unknown, the action type will be a hexadecimal string.
  An unknown action will include a `data` attribute containing the hexadecimal
  value of the action's raw bytes.

yamlschema_examples: |
  ---
  action: OFPAT_OUTPUT
  port: 0xffffffff
  maxlen: 0xffff
  ---
  action: OFPAT_SET_MPLS_TTL
  ttl: 0xffff
  ---
  action: OFPAT_PUSH_VLAN
  vlan: 0xffff
  ---
  action: OFPAT_PUSH_MPLS
  mpls: 0xffffffff
  ---
  action: OFPAT_POP_MPLS
  ethertype: 0xffff
  ---
  action: OFPAT_SET_QUEUE
  queue: 0xffffffff
  ---
  action: OFPAT_GROUP
  group: 0xffffffff
  ---
  action: OFPAT_SET_NW_TTL
  ttl: 0xff
  ---
  action: OFPAT_PUSH_PBB
  ethertype: 0xffff
  ---
  action: OFPAT_COPY_TTL_OUT
  ---
  action: OFPAT_COPY_TTL_IN
  ---
  action: OFPAT_DEC_MPLS_TTL
  ---
  action: OFPAT_POP_VLAN
  ---
  action: OFPAT_DEC_NW_TTL
  ---
  action: OFPAT_POP_PBB
  ---
  action: OFPAT_SET_FIELD
  field: OFB_IP_PROTO
  value: 0x80
  ...

type: object
oneOf:
  # OFPAT_COPY_TTL_OUT()
  # OFPAT_COPY_TTL_IN()
  # OFPAT_DEC_MPLS_TTL()
  # OFPAT_POP_VLAN()
  # OFPAT_DEC_NW_TTL()
  # OFPAT_POP_PBB()
  - properties:
      action: { 'enum' : ['OFPAT_COPY_TTL_OUT', 'OFPAT_COPY_TTL_IN', 'OFPAT_DEC_MPLS_TTL', 'OFPAT_POP_VLAN', 'OFPAT_DEC_NW_TTL', 'OFPAT_POP_PBB']}
    required: ['action']
  # OFPAT_OUTPUT(port, maxlen)
  - properties:
      action: { 'enum' : ['OFPAT_OUTPUT'] }
      port:   { '$ref' : 'types#/uint32' }
      maxlen: { '$ref' : 'types#/uint16' }
    required: ['action', 'port', 'maxlen']
  # OFPAT_SET_MPLS_TTL(ttl)
  - properties:
      action: { 'enum' : ['OFPAT_SET_MPLS_TTL'] }
      ttl:    { '$ref' : 'types#/uint16' }
    required: ['action', 'ttl']
  # OFPAT_PUSH_VLAN(vlan)
  - properties:
      action: { 'enum' : ['OFPAT_PUSH_VLAN'] }
      vlan:   { '$ref' : 'types#/uint16' }
    required: ['action', 'vlan']
  # OFPAT_PUSH_MPLS(mpls)
  - properties:
      action: { 'enum' : ['OFPAT_PUSH_MPLS'] }
      mpls:   { '$ref' : 'types#/uint32' }
    required: ['action', 'mpls']
  # OFPAT_POP_MPLS(ethertype)
  - properties:
      action: { 'enum' : ['OFPAT_POP_MPLS'] }
      ethertype: { '$ref' : 'types#/uint16' }
    required: ['action', 'ethertype']
  # OFPAT_SET_QUEUE(queue)
  - properties:
      action: { 'enum' : ['OFPAT_SET_QUEUE'] }
      queue:  { '$ref' : 'types#/uint32' }
    required: ['action', 'queue']
  # OFPAT_GROUP(group)
  - properties:
      action: { 'enum' : ['OFPAT_GROUP'] }
      group:  { '$ref' : 'types#/uint32' }
    required: ['action', 'group']
  # OFPAT_SET_NW_TTL(ttl)
  - properties:
      action: { 'enum' : ['OFPAT_SET_NW_TTL'] }
      ttl:    { '$ref' : 'types#/uint8' }
    required: ['action', 'ttl']
  # OFPAT_PUSH_PBB(ethertype)
  - properties:
      action: { 'enum' : ['OFPAT_PUSH_PBB'] }
      ethertype: { '$ref' : 'types#/uint16' }
    required: ['action', 'ethertype']
  # OFPAT_SET_FIELD(field, value)
  - properties:
      action: { 'enum' : ['OFPAT_SET_FIELD'] }
      field: {}
      value: {}
    oneOf:  [ { '$ref' : 'field#' } ]
    required: ['action', 'field', 'value']
    additionalProperties: false
  # OFPAT_EXPERIMENTER(experimenter_id, ...)
  - properties:
      action: { 'enum' : ['OFPAT_EXPERIMENTER'] }
      experimenter: { '$ref' : 'types#/uint32' }
    required: ['action', 'experimenter']
