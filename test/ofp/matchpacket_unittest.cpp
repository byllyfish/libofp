#include "ofp/unittest.h"
#include "ofp/matchpacket.h"

using namespace ofp;


static void testPacket(const char *hex, const char *outHex) {
    std::string pkt = HexToRawData(hex);

    // Make sure that packet is aligned to a byte boundary as expected.
    // (Bypass Short-String Optimization)
    if (!IsPtrAligned(pkt.data(), 8))
        pkt.reserve(256);

    MatchPacket match{ByteRange{pkt.data() + 2, pkt.size() - 2}};
    EXPECT_HEX(outHex, match.data(), match.size());
}


TEST(matchpacket, ethernet) {
    testPacket("0000 FFFFFFFFFFFF0000000000010806", "80000606:FFFFFFFFFFFF 80000806:000000000001 80000A02:0806");
}

TEST(matchpacket, arp) {
    testPacket("0000 FFFFFFFFFFFF000000000001080600010800060400010000000000010A0000010000000000000A000002", "80000606:FFFFFFFFFFFF 80000806:000000000001 80000A02:0806 80002A02:0001 80002C04:0A000001 80002E04:0A000002 80003006:000000000001 80003206:000000000000");
}

TEST(matchpacket, icmpv6) {
    testPacket("0000 3333FF718C4C32FA25D4234186DD6000000000183AFF00000000000000000000000000000000FF0200000000000000000001FF718C4C87009A9E00000000FE80000000000000FC0CCDFFFE718C4C", "80000606:3333FF718C4C 80000806:32FA25D42341 80000A02:86DD 80001401:3A 80003410:00000000000000000000000000000000 80003610:00000000000000000000000000000000 80003804:00000000 80003A01:87 80003C01:00");
}

