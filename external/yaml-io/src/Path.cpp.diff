--- /Users/bfish/code/llvm/lib/Support/Path.cpp	2016-10-14 12:38:41.000000000 -0700
+++ ./src/Support/Path.cpp	2016-10-18 11:39:28.000000000 -0700
@@ -12,7 +12,7 @@
 //===----------------------------------------------------------------------===//
 
 #include "llvm/Support/COFF.h"
-#include "llvm/Support/MachO.h"
+//#include "llvm/Support/MachO.h"
 #include "llvm/Support/Endian.h"
 #include "llvm/Support/Errc.h"
 #include "llvm/Support/ErrorHandling.h"
@@ -158,6 +158,7 @@
   FS_Name
 };
 
+#if 0
 static std::error_code createUniqueEntity(const Twine &Model, int &ResultFD,
                                           SmallVectorImpl<char> &ResultPath,
                                           bool MakeAbsolute, unsigned Mode,
@@ -225,6 +226,7 @@
   }
   llvm_unreachable("Invalid Type");
 }
+#endif //0
 
 namespace llvm {
 namespace sys  {
@@ -746,6 +748,7 @@
   return std::error_code();
 }
 
+#if 0
 std::error_code createUniqueFile(const Twine &Model, int &ResultFd,
                                  SmallVectorImpl<char> &ResultPath,
                                  unsigned Mode) {
@@ -799,6 +802,7 @@
   return createUniqueEntity(Prefix + "-%%%%%%", Dummy, ResultPath,
                             true, 0, FS_Dir);
 }
+#endif //0
 
 static std::error_code make_absolute(const Twine &current_directory,
                                      SmallVectorImpl<char> &path,
@@ -977,6 +981,7 @@
   Status = st;
 }
 
+#if 0
 /// @brief Identify the magic in magic.
 file_magic identify_magic(StringRef Magic) {
   if (Magic.size() < 4)
@@ -1152,6 +1157,7 @@
   Result = identify_magic(StringRef(Buffer, Length));
   return std::error_code();
 }
+#endif //0
 
 std::error_code directory_entry::status(file_status &result) const {
   return fs::status(Path, result);
