//
// !! DO NOT EDIT THIS FILE!!
//
// This file is automatically generated during the build
// process. Please make your changes to `ofp/oxmfields.tab`.

#include "ofp/oxmrange.h"
#include "ofp/oxmvalue.h"
#include "ofp/enetaddress.h"
#include "ofp/ipv4address.h"
#include "ofp/ipv6address.h"

namespace ofp {
extern const OXMRange OXMPrereq_OFB_IN_PHY_PORT;
extern const OXMRange OXMPrereq_OFB_VLAN_PCP;
extern const OXMRange OXMPrereq_OFB_IP_DSCP;
extern const OXMRange OXMPrereq_OFB_IP_ECN;
extern const OXMRange OXMPrereq_OFB_IP_PROTO;
extern const OXMRange OXMPrereq_OFB_IPV4_SRC;
extern const OXMRange OXMPrereq_OFB_IPV4_DST;
extern const OXMRange OXMPrereq_OFB_TCP_SRC;
extern const OXMRange OXMPrereq_OFB_TCP_DST;
extern const OXMRange OXMPrereq_OFB_UDP_SRC;
extern const OXMRange OXMPrereq_OFB_UDP_DST;
extern const OXMRange OXMPrereq_OFB_SCTP_SRC;
extern const OXMRange OXMPrereq_OFB_SCTP_DST;
extern const OXMRange OXMPrereq_OFB_ICMPV4_TYPE;
extern const OXMRange OXMPrereq_OFB_ICMPV4_CODE;
extern const OXMRange OXMPrereq_OFB_ARP_OP;
extern const OXMRange OXMPrereq_OFB_ARP_SPA;
extern const OXMRange OXMPrereq_OFB_ARP_TPA;
extern const OXMRange OXMPrereq_OFB_ARP_SHA;
extern const OXMRange OXMPrereq_OFB_ARP_THA;
extern const OXMRange OXMPrereq_OFB_IPV6_SRC;
extern const OXMRange OXMPrereq_OFB_IPV6_DST;
extern const OXMRange OXMPrereq_OFB_IPV6_FLABEL;
extern const OXMRange OXMPrereq_OFB_ICMPV6_TYPE;
extern const OXMRange OXMPrereq_OFB_ICMPV6_CODE;
extern const OXMRange OXMPrereq_OFB_IPV6_ND_TARGET;
extern const OXMRange OXMPrereq_OFB_IPV6_ND_SLL;
extern const OXMRange OXMPrereq_OFB_IPV6_ND_TLL;
extern const OXMRange OXMPrereq_OFB_MPLS_LABEL;
extern const OXMRange OXMPrereq_OFB_MPLS_TC;
extern const OXMRange OXMPrereq_OFP_MPLS_BOS;
extern const OXMRange OXMPrereq_OFB_PBB_ISID;
extern const OXMRange OXMPrereq_OFB_IPV6_EXTHDR;

using OFB_IN_PORT = OXMValue<0x8000,0,Big32,32,false>;
using OFB_IN_PHY_PORT = OXMValue<0x8000,1,Big32,32,false,&OXMPrereq_OFB_IN_PHY_PORT>;
using OFB_METADATA = OXMValue<0x8000,2,Big64,64,true>;
using OFB_ETH_DST = OXMValue<0x8000,3,EnetAddress,48,true>;
using OFB_ETH_SRC = OXMValue<0x8000,4,EnetAddress,48,true>;
using OFB_ETH_TYPE = OXMValue<0x8000,5,Big16,16,false>;
using OFB_VLAN_VID = OXMValue<0x8000,6,Big16,13,true>;
using OFB_VLAN_PCP = OXMValue<0x8000,7,Big8,3,false,&OXMPrereq_OFB_VLAN_PCP>;
using OFB_IP_DSCP = OXMValue<0x8000,8,Big8,6,false,&OXMPrereq_OFB_IP_DSCP>;
using OFB_IP_ECN = OXMValue<0x8000,9,Big8,2,false,&OXMPrereq_OFB_IP_ECN>;
using OFB_IP_PROTO = OXMValue<0x8000,10,Big8,8,false,&OXMPrereq_OFB_IP_PROTO>;
using OFB_IPV4_SRC = OXMValue<0x8000,11,IPv4Address,32,true,&OXMPrereq_OFB_IPV4_SRC>;
using OFB_IPV4_DST = OXMValue<0x8000,12,IPv4Address,32,true,&OXMPrereq_OFB_IPV4_DST>;
using OFB_TCP_SRC = OXMValue<0x8000,13,Big16,16,false,&OXMPrereq_OFB_TCP_SRC>;
using OFB_TCP_DST = OXMValue<0x8000,14,Big16,16,false,&OXMPrereq_OFB_TCP_DST>;
using OFB_UDP_SRC = OXMValue<0x8000,15,Big16,16,false,&OXMPrereq_OFB_UDP_SRC>;
using OFB_UDP_DST = OXMValue<0x8000,16,Big16,16,false,&OXMPrereq_OFB_UDP_DST>;
using OFB_SCTP_SRC = OXMValue<0x8000,17,Big16,16,false,&OXMPrereq_OFB_SCTP_SRC>;
using OFB_SCTP_DST = OXMValue<0x8000,18,Big16,16,false,&OXMPrereq_OFB_SCTP_DST>;
using OFB_ICMPV4_TYPE = OXMValue<0x8000,19,Big8,8,false,&OXMPrereq_OFB_ICMPV4_TYPE>;
using OFB_ICMPV4_CODE = OXMValue<0x8000,20,Big8,8,false,&OXMPrereq_OFB_ICMPV4_CODE>;
using OFB_ARP_OP = OXMValue<0x8000,21,Big16,16,false,&OXMPrereq_OFB_ARP_OP>;
using OFB_ARP_SPA = OXMValue<0x8000,22,IPv4Address,32,true,&OXMPrereq_OFB_ARP_SPA>;
using OFB_ARP_TPA = OXMValue<0x8000,23,IPv4Address,32,true,&OXMPrereq_OFB_ARP_TPA>;
using OFB_ARP_SHA = OXMValue<0x8000,24,EnetAddress,48,true,&OXMPrereq_OFB_ARP_SHA>;
using OFB_ARP_THA = OXMValue<0x8000,25,EnetAddress,48,true,&OXMPrereq_OFB_ARP_THA>;
using OFB_IPV6_SRC = OXMValue<0x8000,26,IPv6Address,128,true,&OXMPrereq_OFB_IPV6_SRC>;
using OFB_IPV6_DST = OXMValue<0x8000,27,IPv6Address,128,true,&OXMPrereq_OFB_IPV6_DST>;
using OFB_IPV6_FLABEL = OXMValue<0x8000,28,Big32,20,true,&OXMPrereq_OFB_IPV6_FLABEL>;
using OFB_ICMPV6_TYPE = OXMValue<0x8000,29,Big8,8,false,&OXMPrereq_OFB_ICMPV6_TYPE>;
using OFB_ICMPV6_CODE = OXMValue<0x8000,30,Big8,8,false,&OXMPrereq_OFB_ICMPV6_CODE>;
using OFB_IPV6_ND_TARGET = OXMValue<0x8000,31,IPv6Address,128,false,&OXMPrereq_OFB_IPV6_ND_TARGET>;
using OFB_IPV6_ND_SLL = OXMValue<0x8000,32,EnetAddress,48,false,&OXMPrereq_OFB_IPV6_ND_SLL>;
using OFB_IPV6_ND_TLL = OXMValue<0x8000,33,EnetAddress,48,false,&OXMPrereq_OFB_IPV6_ND_TLL>;
using OFB_MPLS_LABEL = OXMValue<0x8000,34,Big32,20,false,&OXMPrereq_OFB_MPLS_LABEL>;
using OFB_MPLS_TC = OXMValue<0x8000,35,Big8,3,false,&OXMPrereq_OFB_MPLS_TC>;
using OFP_MPLS_BOS = OXMValue<0x8000,36,Big8,1,false,&OXMPrereq_OFP_MPLS_BOS>;
using OFB_PBB_ISID = OXMValue<0x8000,37,Big32,24,true,&OXMPrereq_OFB_PBB_ISID>;
using OFB_TUNNEL_ID = OXMValue<0x8000,38,Big64,64,true>;
using OFB_IPV6_EXTHDR = OXMValue<0x8000,39,Big16,9,true,&OXMPrereq_OFB_IPV6_EXTHDR>;

extern const OXMTypeInfo OXMTypeInfoArray[];
extern const size_t OXMTypeInfoArraySize;

}
